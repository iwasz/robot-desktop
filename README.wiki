===Robot/Desktop===
Bluetooth LE desktop application for communication with the robot https://hackaday.io/project/11508-micro-robot-wars . As far as I could research it seems, that there are two ways of communicating with BLE peripheral. First is using low level stuff like gatttool does, and second (preferred?) is using DBus (like bluetoothctl). 

My understanding is that by going with option 1. (my attempt is in src directory) you can connect to the BT adapter, you can perform a scan for BLE devices using the API from system wide bluetooth/bluetooth.h, and connect to them with usual socket API. But when it comes to GATT operations you have to copy tons of code from bluez/attrib and the like to your project, because it is not available system-wide. This approach is used for example here : https://github.com/jacklund/libgatt. But the drawback is, that when bluez team makes changes to their code, you would have to make diff and apply changes to your copy.

At the other hand here : http://stackoverflow.com/questions/30808453/bluez-5-30-d-bus-gatt-api-simply-discover-and-connect-to-a-ble-device-in-c guys said, that DBus approach is preferred by the bluez team, and as far as I can tell this API is available to end-users like me, and will get updates with new version of bluez, which is a win. So in dbus-minimal I'll try to make simplest possible program (based on the bluez bluetoothctl) which would scan for devices, connect to the one, and write to a characteristic.
